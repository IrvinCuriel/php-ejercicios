Administrador de Dependencias en php

Permite instalar librerias

Administra cada dependencia en cada proyecto

Equivalente a NPM pero para PHP



sudo apt install composer

https://laravel.com/docs/7.x

composer

// se crea el archivo composer.json como sigue
*************************************************************************************************************

:~/lampstack-7.2.24-0/apache2/htdocs/php-oop$ composer init

  Welcome to the Composer config generator

This command will guide you through creating your composer.json config.

Package name (<vendor>/<name>) [irvin/php-oop]:
Description []: Aprendiendo Namespaces y Autoload
Author [, n to skip]: Luis <correo@correo.com>
Minimum Stability []:
Package Type (e.g. library, project, metapackage, composer-plugin) []:
License []:

Define your dependencies.

Would you like to define your dependencies (require) interactively [yes]? no
Would you like to define your dev dependencies (require-dev) interactively [yes]? no

{
    "name": "irvin/php-oop",
    "description": "Aprendiendo Namespaces y Autoload",
    "authors": [
        {
            "name": "Luis",
            "email": "correo@correo.com"
        }
    ],
    "require": {}
}

Do you confirm generation [yes]? yes

*************************************************************************************************************

SE REALZARON LOS CAMBIOS EN composer.json

*************************************************************************************************************
Una vez realizados los cambios en composer.json en terminal poner:

composer update

Se crea la carpeta vendor

*************************************************************************************************************



*************************************************************************************************************
*************************************************************************************************************
*************************************************************************************************************
En carpeta Includes->app.php
<?php

define('FUNCIONES_URL', __DIR__ . "/funciones/funciones.php");
define('TEMPLATES_URL', __DIR__ . "/templates");

---------------------------------------------------------
En carpeta Includes->app.php
<?php

require 'funciones.php';
require 'config/database.php';
require __DIR__ . "/../vendor/autoload.php";

use App\Propiedad;
$propiedad = new Propiedad;

var_dump($propiedad);

NOTA: en Index.php colocar :

<?php
require 'includes/app.php';
*************************************************************************************************************
En carpeta Includes->funciones.php
<?php

include 'app.php';

function incluirTemplate(string $nombre, bool $inicio = false)
{
    include TEMPLATES_URL . "/${nombre}.php";
}

function estaAutenticado() : bool {
    session_start();

    // echo "<pre>";
    // var_dump($_SESSION);
    // echo "</pre>";
    
    if($_SESSION['login']) {
        return true;
    } 

    return false;
}

---------------------------------------------------------
En carpeta Includes->funciones.php
<?php


define('FUNCIONES_URL', __DIR__ . "/funciones/funciones.php");
define('TEMPLATES_URL', __DIR__ . "/templates");

function incluirTemplate(string $nombre, bool $inicio = false)
{
    include TEMPLATES_URL . "/${nombre}.php";
}

function estaAutenticado() : bool {
    session_start();

    // echo "<pre>";
    // var_dump($_SESSION);
    // echo "</pre>";
    
    if($_SESSION['login']) {
        return true;
    } 

    return false;
}



*************************************************************************************************************

se crea carpeta clases
clases.php->propiedad.php:

<?php
namespaces App;

class Propiedad {
}

*************************************************************************************************************

includes->config->database.php

<?php

function conectarDb(): mysqli
{
    $db = mysqli_connect('localhost', 'root', '132456', 'bienesraices_crud');

    if (!$db) {
        echo "Error: No se pudo conectar a MySQL.";
        echo "errno de depuración: " . mysqli_connect_errno();
        echo "error de depuración: " . mysqli_connect_error();
        exit;
    }

    return $db;
}

